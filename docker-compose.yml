---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  init-kafka:
      image: confluentinc/cp-kafka:6.1.1
      depends_on:
        - kafka
      entrypoint: [ '/bin/sh', '-c' ]
      command: |
          "
          kafka-topics --bootstrap-server broker:29092 --list
          echo -e 'Creating kafka topics'
          
          kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic fpl_gameweeks --replication-factor 1 --partitions 5
          kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic fpl_managers --replication-factor 1 --partitions 5
          
          echo -e 'Successfully created the following topics:'
          kafka-topics --bootstrap-server broker:29092 --list
          "


  db:
    image: postgres:14.1-alpine
    restart: always
    container_name: fpl_postgres
    environment:
      - POSTGRES_USER=calumjackson
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      
volumes:
  db:
    driver: local
